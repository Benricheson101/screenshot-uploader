#!/usr/bin/env bash

#
# DESCRIPTION:
# Upload screenshots to ShareX screenshot custom uploaders
#
# SETUP:
# Set the path to your config file
# Note: depending on the uploader, you may have to change some of the config file JSON properties, either here or in your config file.
#
# REQUIREMENTS:
# ripgrep - https://github.com/BurntSushi/ripgrep
# xclip - https://github.com/astrand/xclip
# imagemagick - https://imagemagick.org
#
# USAGE:
# uploader [CONFIG]
#
# EXAMPLE:
# maim | uploader $HOME/.config/screenshot-uploader/screenshot.sxcu
#
# GITHUB:
# https://github.com/Benricheson101/screenshot-uploader
#

config_location=${1:-"$HOME/.config/screenshot-uploader/config.sxcu"}

[[ -f "$config_location" ]] || { echo "$config_location does not exist" ; exit 1 ; }

tempfile=$(mktemp /tmp/screenshot_uploader.XXXXX)
cat /dev/stdin > "$tempfile"

config=$(cat "$config_location")

request_url=$(jq -r '.RequestURL' <<< "$config")
response_url=$(jq -r '.URL' <<< "$config")
authorization="Authorization: $(jq -r '.Headers.Authorization' <<< "$config")"
file_form_name=$(jq -r '.FileFormName' <<< "$config")

[[ ! -s "$tempfile" ]] && exit 1;

cat $tempfile | xclip -sel clip -t image/png

response=$(curl -sSL -X POST -F "$file_form_name=@$tempfile;type=image/png" -H "Content-Type: Multipart/form-data" -H "$authorization" "$request_url");

[[ -z $response ]] && { notify-send -u critical 'Screenshot Upload Error' 'The server returned null or did not respond in time' ; exit 1 ; }

count=1
for key in $(rg -o '\$json:(.*?)\$' -r "\$$count" <<< "$response_url")
do
  data=$(jq -r ".$key" <<< "$response")
  to_match="\\\$json:$key\\\$"
  response_url=$(sed "s/$to_match/$data/" <<< "$response_url")

  ((count++))
done

convert $tempfile -resize 32x32 $tempfile

echo -n $response_url | xclip -selection clipboard
notify-send -u normal 'Screenshot Uploaded' $response_url -i $tempfile
echo -n "$response_url"

rm $tempfile

# vim:syntax=sh
