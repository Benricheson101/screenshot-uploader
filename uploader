# !/bin/bash

#
# DESCRIPTION:
# Upload screenshots to ShareX screenshot custom uploaders
#
# SETUP:
# Set the path to your config file
#
# REQUIREMENTS:
# ripgrep - https://github.com/BurntSushi/ripgrep
# xclip - https://github.com/astrand/xclip
#
# USAGE:
# uploader [CONFIG]
#
# EXAMPLE:
# maim | uploader $HOME/.config/screenshot-uploader/screenshot.sxcu
#
# GITHUB:
# https://github.com/Benricheson101/screenshot-uploader
#

config_location=${1:-"$HOME/.config/screenshot-uploader/config.sxcu"}

[[ -f "$config_location" ]] || { echo "$config_location does not exist" ; exit 1 ; }

tempfile=$(mktemp /tmp/screenshot_uploader.XXXXX)
cat /dev/stdin > "$tempfile"

config=$(cat "$config_location")
  
request_url=$(jq -r '.RequestURL' <<< "$config")
response_url=$(jq -r '.URL' <<< "$config")
authorization="Authorization: $(jq -r '.Headers.Authorization' <<< "$config")"
file_form_name=$(jq -r '.FileFormName' <<< "$config")

[[ -z "$(cat $tempfile)" ]] && exit 1;

response=$(ifne curl -sSL -X POST -F "$file_form_name=@$tempfile;type=image/png" -H "Content-Type: Multipart/form-data" -H "$authorization" "$request_url" <<< "$img");

rm "$tempfile"

[[ -z "$response" ]] && exit 1;

count=1
for key in $(rg -o '\$json:(.*?)\$' -r '$'$count <<< "$response_url")
do
  response_url=$(echo "$response_url" | sed 's/\$json:'"$key"'\$/'"$(jq -r ".$key" <<< "$response")/")
  ((count++))
done

echo -n "$response_url" | xclip -sel clip

# vim:syntax=sh
